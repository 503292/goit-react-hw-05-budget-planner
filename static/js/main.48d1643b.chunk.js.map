{"version":3,"sources":["components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm/BudgetForm.js","redux/storeChanges/types.js","components/BudgetForm/BudgetFormContainer.js","redux/storeChanges/actions.js","components/ExpenseForm/ExpenseForm.js","components/ExpenseForm/ExpenseFormContainer.js","components/ExpensesTable/ExpensesTable.js","redux/storeChanges/selects.js","components/ExpensesTable/ExpensesTableContainer.js","components/Values/Stat.js","components/Values/Values.js","components/Values/ValueContainer.js","components/App.js","redux/middleware/loger.js","redux/storeChanges/reducers.js","redux/store.js","index.js"],"names":["StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","defaultProps","StyledButton","button","Button","onClick","BudgetForm","state","budget","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","Number","this","Component","connect","dispatch","Type","payload","ExpenseForm","amount","newTrans","id","shortid","generate","Table","table","ExpensesTable","items","onRemove","map","key","getBudget","getExpenses","expenses","reduce","acc","expense","getBalance","getAllExpenses","Container","div","isPositive","p","Value","Stat","section","Values","balance","App","logger","store","next","action","console","group","info","groupEnd","rootReducers","combineReducers","filter","el","enhancer","applyMiddleware","loger","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48d1643b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  customStyles: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({ type = 'text', value, onChange = () => null, name = '' }) => {\n  return (\n    <StyledInput type={type} value={value} onChange={onChange} name={name} />\n  );\n};\n\nInput.defaultProps = {\n  name: '',\n};\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.defaultProps = {\n  onClick: null,\n  type: 'button',\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass BudgetForm extends Component {\n  state = { budget: 0 };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave(Number(this.state.budget));\n\n    this.setState({ budget: 0 });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nBudgetForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default BudgetForm;\n","export default {\n  SET_BUDGET: 'SET_BUDGET',\n  GET_EXPENSE: 'GET_EXPENSE',\n  DELETE_EXPENSE: 'DELETE_EXPENSE',\n};\n","import { connect } from 'react-redux';\nimport BudgetForm from './BudgetForm';\nimport * as actions from '../../redux/storeChanges/actions';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: input => dispatch(actions.setBudget(input)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(BudgetForm);\n","import Type from './types';\n\nexport const setBudget = value => ({\n  type: Type.SET_BUDGET,\n  payload: value,\n});\n\nexport const getExpense = value => ({\n  type: Type.GET_EXPENSE,\n  payload: value,\n});\n\nexport const deleteExpense = value => ({\n  type: Type.DELETE_EXPENSE,\n  payload: value,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nexport default class ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, amount } = this.state;\n\n    const newTrans = {\n      amount: Number(amount),\n      id: shortid.generate(),\n      name,\n    };\n\n    this.props.onSave(newTrans);\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nExpenseForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport * as actions from '../../redux/storeChanges/actions';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: input => dispatch(actions.getExpense(input)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Button from '../shared/Button';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], onRemove }) => {\n  return (\n    <>\n      <Table>\n        <thead>\n          <tr>\n            <th>Expense name</th>\n            <th>Expense amount</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(({ id, name, amount }) => (\n            <tr key={id}>\n              <td>{name}</td>\n              <td>{amount}</td>\n              <td>\n                <Button\n                  label=\"Delete\"\n                  value={id}\n                  onClick={() => onRemove(id)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nExpensesTable.propTypes = {\n  onRemove: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default ExpensesTable;\n","export const getBudget = state => state.budget;\n\nexport const getExpenses = state =>\n  state.expenses.reduce((acc, expense) => acc + expense.amount, 0);\nexport const getBalance = state => getBudget(state) - getExpenses(state);\n\nexport const getAllExpenses = state => state.expenses;\n","import { connect } from 'react-redux';\nimport ExpensesTable from './ExpensesTable';\nimport * as actions from '../../redux/storeChanges/actions';\nimport { getAllExpenses } from '../../redux/storeChanges/selects';\n\nconst mapStateToProp = state => ({\n  items: getAllExpenses(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(actions.deleteExpense(id)),\n});\n\nexport default connect(\n  mapStateToProp,\n  mapDispatchToProps,\n)(ExpensesTable);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nStat.defaultProps = {\n  isPositive: true,\n};\n\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool,\n};\n\nexport default Stat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Stat from './Stat';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Stat label=\"Budget\" value={budget} isPositive />\n    <Stat label=\"Expenses\" value={expenses} />\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Values;\n","import { connect } from 'react-redux';\nimport Values from './Values';\nimport {\n  getBudget,\n  getExpenses,\n  getBalance,\n} from '../../redux/storeChanges/selects';\n\nconst mapStateToProp = state => ({\n  budget: getBudget(state),\n  expenses: getExpenses(state),\n  balance: getBalance(state),\n});\n\nexport default connect(mapStateToProp)(Values);\n","import React from 'react';\nimport styled from 'styled-components';\nimport BudgetForm from './BudgetForm/BudgetFormContainer';\nimport ExpenseForm from './ExpenseForm/ExpenseFormContainer';\nimport ExpensesTable from './ExpensesTable/ExpensesTableContainer';\nimport Values from './Values/ValueContainer';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = () => (\n  <Container>\n    <BudgetForm />\n    <Values />\n    <ExpenseForm />\n    <ExpensesTable />\n  </Container>\n);\n\nexport default App;\n","const logger = store => next => action => {\n    console.group(action.type);\n    console.info('dispatching', action);\n    console.groupEnd(action.type);\n\n    return next(action);\n};\n\nexport default logger;","import { combineReducers } from 'redux';\nimport Type from './types';\n\nconst budgetFormReducer = (state = 0, { type, payload }) => {\n  switch (type) {\n    case Type.SET_BUDGET:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nconst expenseFormReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.GET_EXPENSE:\n      return [payload, ...state];\n\n    case Type.DELETE_EXPENSE:\n      return state.filter(el => el.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducers = combineReducers({\n  budget: budgetFormReducer,\n  expenses: expenseFormReducer,\n});\n\nexport default rootReducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport loger from './middleware/loger';\nimport rootReducers from './storeChanges/reducers';\n\nconst enhancer = applyMiddleware(loger);\n\nconst store = createStore(rootReducers, composeWithDevTools(enhancer));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}